{"ast":null,"code":"export default class TinyQueue {\n  constructor(data = [], compare = defaultCompare) {\n    this.data = data;\n    this.length = this.data.length;\n    this.compare = compare;\n\n    if (this.length > 0) {\n      for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n    }\n  }\n\n  push(item) {\n    this.data.push(item);\n    this.length++;\n\n    this._up(this.length - 1);\n  }\n\n  pop() {\n    if (this.length === 0) return undefined;\n    const top = this.data[0];\n    const bottom = this.data.pop();\n    this.length--;\n\n    if (this.length > 0) {\n      this.data[0] = bottom;\n\n      this._down(0);\n    }\n\n    return top;\n  }\n\n  peek() {\n    return this.data[0];\n  }\n\n  _up(pos) {\n    const data = this.data,\n          compare = this.compare;\n    const item = data[pos];\n\n    while (pos > 0) {\n      const parent = pos - 1 >> 1;\n      const current = data[parent];\n      if (compare(item, current) >= 0) break;\n      data[pos] = current;\n      pos = parent;\n    }\n\n    data[pos] = item;\n  }\n\n  _down(pos) {\n    const data = this.data,\n          compare = this.compare;\n    const halfLength = this.length >> 1;\n    const item = data[pos];\n\n    while (pos < halfLength) {\n      let left = (pos << 1) + 1;\n      let best = data[left];\n      const right = left + 1;\n\n      if (right < this.length && compare(data[right], best) < 0) {\n        left = right;\n        best = data[right];\n      }\n\n      if (compare(best, item) >= 0) break;\n      data[pos] = best;\n      pos = left;\n    }\n\n    data[pos] = item;\n  }\n\n}\n\nfunction defaultCompare(a, b) {\n  return a < b ? -1 : a > b ? 1 : 0;\n}","map":null,"metadata":{},"sourceType":"module"}