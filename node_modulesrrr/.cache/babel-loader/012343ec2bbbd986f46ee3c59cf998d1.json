{"ast":null,"code":"import _defineProperty from \"/home/shandroid/Desktop/bird/client/RajBhai/dashboard2/light-blue-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/shandroid/Desktop/bird/client/RajBhai/dashboard2/light-blue-react-template/src/pages/register/Register.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Container, Alert, Button, FormGroup, InputGroup, InputGroupAddon, InputGroupText, Input, Label } from 'reactstrap';\nimport Widget from '../../components/Widget';\nimport { registerUser, registerError } from '../../actions/register';\nimport microsoft from '../../images/microsoft.png';\nimport Login from '../login';\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n    this.doRegister = this.doRegister.bind(this);\n    this.changeEmail = this.changeEmail.bind(this);\n    this.changePassword = this.changePassword.bind(this);\n    this.changeConfirmPassword = this.changeConfirmPassword.bind(this);\n    this.checkPassword = this.checkPassword.bind(this);\n    this.isPasswordValid = this.isPasswordValid.bind(this);\n  }\n\n  changeEmail(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  changePassword(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  changeConfirmPassword(event) {\n    this.setState({\n      confirmPassword: event.target.value\n    });\n  }\n\n  checkPassword() {\n    if (!this.isPasswordValid()) {\n      if (!this.state.password) {\n        this.props.dispatch(registerError(\"Password field is empty\"));\n      } else {\n        this.props.dispatch(registerError(\"Passwords are not equal\"));\n      }\n\n      setTimeout(() => {\n        this.props.dispatch(registerError());\n      }, 3 * 1000);\n    }\n  }\n\n  isPasswordValid() {\n    return this.state.password && this.state.password === this.state.confirmPassword;\n  }\n\n  doRegister(e) {\n    e.preventDefault();\n\n    if (!this.isPasswordValid()) {\n      this.checkPassword();\n    } else {\n      this.props.dispatch(registerUser({\n        creds: {\n          email: this.state.email,\n          password: this.state.password\n        },\n        history: this.props.history\n      }));\n    }\n  }\n\n  render() {\n    const _ref = this.props.location.state || {\n      from: {\n        pathname: '/app'\n      }\n    },\n          from = _ref.from; // eslint-disable-line\n    // cant access login page while logged in\n\n\n    if (Login.isAuthenticated(JSON.parse(localStorage.getItem('authenticated')))) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: from,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auth-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Widget, {\n      className: \"widget-auth mx-auto\",\n      title: /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"mt-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 68\n        }\n      }, \"Login to your Web App\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"widget-auth-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, \"Please fill all fields below.\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.doRegister,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, this.props.errorMessage && /*#__PURE__*/React.createElement(Alert, {\n      className: \"alert-sm widget-middle-overflow rounded-0\",\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 37\n      }\n    }, this.props.errorMessage), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"mt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"input-group-no-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"la la-user text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Input, {\n      id: \"email\",\n      className: \"input-transparent pl-3\",\n      value: this.state.email,\n      onChange: this.changeEmail,\n      type: \"email\",\n      required: true,\n      name: \"email\",\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"input-group-no-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"la la-lock text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Input, {\n      id: \"password\",\n      className: \"input-transparent pl-3\",\n      value: this.state.password,\n      onChange: this.changePassword,\n      type: \"password\",\n      required: true,\n      name: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"confirmPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }, \"Confirm\"), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"input-group-no-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"la la-lock text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Input, {\n      id: \"confirmPassword\",\n      className: \"input-transparent pl-3\",\n      value: this.state.confirmPassword,\n      onChange: this.changeConfirmPassword,\n      onBlur: this.checkPassword,\n      type: \"password\",\n      required: true,\n      name: \"confirmPassword\",\n      placeholder: \"Confirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bg-widget-transparent auth-widget-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"danger\",\n      className: \"auth-btn\",\n      size: \"sm\",\n      style: {\n        color: '#fff'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }\n    }, this.props.isFetching ? 'Loading...' : 'Register'), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"widget-auth-info mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    }, \"Already have the account? Login now!\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"d-block text-center mb-4\",\n      to: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }, \"Enter the account\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"social-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      className: \"social-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"social-icon social-google\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"social-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 41\n      }\n    }, \"GOOGLE\")), /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      className: \"social-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"social-icon social-microsoft\",\n      style: {\n        backgroundImage: \"url(\".concat(microsoft, \")\")\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"social-text\",\n      style: {\n        color: '#fff'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 41\n      }\n    }, \"MICROSOFT\"))))))), /*#__PURE__*/React.createElement(\"footer\", {\n      className: \"auth-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, \"2020 \\xA9 Sing App - React Admin Dashboard Template.\"));\n  }\n\n}\n\n_defineProperty(Register, \"propTypes\", {\n  dispatch: PropTypes.func.isRequired\n});\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.register.isFetching,\n    errorMessage: state.register.errorMessage\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(Register));","map":{"version":3,"sources":["/home/shandroid/Desktop/bird/client/RajBhai/dashboard2/light-blue-react-template/src/pages/register/Register.js"],"names":["React","PropTypes","withRouter","Redirect","Link","connect","Container","Alert","Button","FormGroup","InputGroup","InputGroupAddon","InputGroupText","Input","Label","Widget","registerUser","registerError","microsoft","Login","Register","Component","constructor","props","state","email","password","confirmPassword","doRegister","bind","changeEmail","changePassword","changeConfirmPassword","checkPassword","isPasswordValid","event","setState","target","value","dispatch","setTimeout","e","preventDefault","creds","history","render","location","from","pathname","isAuthenticated","JSON","parse","localStorage","getItem","errorMessage","color","isFetching","backgroundImage","func","isRequired","mapStateToProps","register"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Container, Alert, Button, FormGroup, InputGroup, InputGroupAddon, InputGroupText, Input, Label } from 'reactstrap';\nimport Widget from '../../components/Widget';\nimport { registerUser, registerError } from '../../actions/register';\nimport microsoft from '../../images/microsoft.png';\nimport Login from '../login';\n\nclass Register extends React.Component {\n    static propTypes = {\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: '',\n            confirmPassword: ''\n        };\n\n        this.doRegister = this.doRegister.bind(this);\n        this.changeEmail = this.changeEmail.bind(this);\n        this.changePassword = this.changePassword.bind(this);\n        this.changeConfirmPassword = this.changeConfirmPassword.bind(this);\n        this.checkPassword = this.checkPassword.bind(this);\n        this.isPasswordValid = this.isPasswordValid.bind(this);\n    }\n\n    changeEmail(event) {\n        this.setState({email: event.target.value});\n    }\n\n    changePassword(event) {\n        this.setState({password: event.target.value});\n    }\n\n    changeConfirmPassword(event) {\n        this.setState({confirmPassword: event.target.value});\n    }\n\n    checkPassword() {\n        if (!this.isPasswordValid()) {\n            if (!this.state.password) {\n                this.props.dispatch(registerError(\"Password field is empty\"));\n            } else {\n                this.props.dispatch(registerError(\"Passwords are not equal\"));\n            }\n            setTimeout(() => {\n                this.props.dispatch(registerError());\n            }, 3 * 1000)\n        }\n    }\n\n    isPasswordValid() {\n       return this.state.password && this.state.password === this.state.confirmPassword;\n    }\n\n    doRegister(e) {\n        e.preventDefault();\n        if (!this.isPasswordValid()) {\n            this.checkPassword();\n        } else {\n            this.props.dispatch(registerUser({\n                creds: {\n                    email: this.state.email,\n                    password: this.state.password\n                },\n                history: this.props.history\n            }));\n        }\n    }\n\n    render() {\n        const {from} = this.props.location.state || {from: {pathname: '/app'}}; // eslint-disable-line\n\n        // cant access login page while logged in\n        if (Login.isAuthenticated(JSON.parse(localStorage.getItem('authenticated')))) {\n            return (\n                <Redirect to={from}/>\n            );\n        }\n\n        return (\n            <div className=\"auth-page\">\n                <Container>\n                    <Widget className=\"widget-auth mx-auto\" title={<h3 className=\"mt-0\">Login to your Web App</h3>}>\n                        <p className=\"widget-auth-info\">\n                            Please fill all fields below.\n                        </p>\n                        <form onSubmit={this.doRegister}>\n                            {\n                                this.props.errorMessage && (\n                                    <Alert className=\"alert-sm widget-middle-overflow rounded-0\" color=\"danger\">\n                                        {this.props.errorMessage}\n                                    </Alert>\n                                )\n                            }\n                            <FormGroup className=\"mt\">\n                                <Label for=\"email\">Email</Label>\n                                <InputGroup className=\"input-group-no-border\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"la la-user text-white\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input id=\"email\" className=\"input-transparent pl-3\" value={this.state.email}\n                                           onChange={this.changeEmail} type=\"email\"\n                                           required name=\"email\" placeholder=\"Email\"/>\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"password\">Password</Label>\n                                <InputGroup className=\"input-group-no-border\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"la la-lock text-white\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input id=\"password\" className=\"input-transparent pl-3\" value={this.state.password}\n                                           onChange={this.changePassword} type=\"password\"\n                                           required name=\"password\" placeholder=\"Password\"/>\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"confirmPassword\">Confirm</Label>\n                                <InputGroup className=\"input-group-no-border\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"la la-lock text-white\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input id=\"confirmPassword\" className=\"input-transparent pl-3\" value={this.state.confirmPassword}\n                                           onChange={this.changeConfirmPassword} onBlur={this.checkPassword} type=\"password\"\n                                           required name=\"confirmPassword\" placeholder=\"Confirm\"/>\n                                </InputGroup>\n                            </FormGroup>\n                            <div className=\"bg-widget-transparent auth-widget-footer\">\n                                <Button type=\"submit\" color=\"danger\" className=\"auth-btn\"\n                                        size=\"sm\" style={{color: '#fff'}}>{this.props.isFetching ? 'Loading...' : 'Register'}</Button>\n                                <p className=\"widget-auth-info mt-4\">\n                                    Already have the account? Login now!\n                                </p>\n                                <Link className=\"d-block text-center mb-4\" to=\"login\">Enter the account</Link>\n                                <div className=\"social-buttons\">\n                                    <Button color=\"primary\" className=\"social-button\">\n                                        <i className=\"social-icon social-google\"/>\n                                        <p className=\"social-text\">GOOGLE</p>\n                                    </Button>\n                                    <Button color=\"success\" className=\"social-button\">\n                                        <i className=\"social-icon social-microsoft\"\n                                           style={{backgroundImage: `url(${microsoft})`}}/>\n                                        <p className=\"social-text\" style={{color: '#fff'}}>MICROSOFT</p>\n                                    </Button>\n                                </div>\n                            </div>\n                        </form>\n                    </Widget>\n                    {/*<Widget className=\"widget-auth mx-auto\" title={<h3 className=\"mt-0\">Create an account</h3>}>*/}\n                        {/*<p className=\"widget-auth-info\">*/}\n                            {/*Please fill all fields below*/}\n                        {/*</p>*/}\n                        {/*<form className=\"mt\" onSubmit={this.doRegister}>*/}\n                            {/*{*/}\n                                {/*this.props.errorMessage && (*/}\n                                    {/*<Alert className=\"alert-sm\" color=\"danger\">*/}\n                                        {/*{this.props.errorMessage}*/}\n                                    {/*</Alert>*/}\n                                {/*)*/}\n                            {/*}*/}\n                            {/*<div className=\"form-group\">*/}\n                                {/*<input className=\"form-control no-border\" value={this.state.email}*/}\n                                       {/*onChange={this.changeEmail} type=\"text\" required name=\"email\"*/}\n                                       {/*placeholder=\"Email\"/>*/}\n                            {/*</div>*/}\n                            {/*<div className=\"form-group\">*/}\n                                {/*<input className=\"form-control no-border\" value={this.state.password}*/}\n                                       {/*onChange={this.changePassword} type=\"password\" required name=\"password\"*/}\n                                       {/*placeholder=\"Password\"/>*/}\n                            {/*</div>*/}\n                            {/*<div className=\"form-group\">*/}\n                                {/*<input className=\"form-control no-border\" value={this.state.confirmPassword}*/}\n                                       {/*onChange={this.changeConfirmPassword} onBlur={this.checkPassword} type=\"password\" required name=\"confirmPassword\"*/}\n                                       {/*placeholder=\"Confirm\"/>*/}\n                            {/*</div>*/}\n                            {/*<Button type=\"submit\" color=\"inverse\" className=\"auth-btn mb-3\" size=\"sm\">{this.props.isFetching ? 'Loading...' : 'Register'}</Button>*/}\n                            {/*<p className=\"widget-auth-info\">or sign up with</p>*/}\n                            {/*<div className=\"social-buttons\">*/}\n                                {/*<Button onClick={this.googleLogin} color=\"primary\" className=\"social-button mb-2\">*/}\n                                    {/*<i className=\"social-icon social-google\"/>*/}\n                                    {/*<p className=\"social-text\">GOOGLE</p>*/}\n                                {/*</Button>*/}\n                                {/*<Button onClick={this.microsoftLogin} color=\"success\" className=\"social-button\">*/}\n                                    {/*<i className=\"social-icon social-microsoft\"*/}\n                                       {/*style={{backgroundImage: `url(${microsoft})`}}/>*/}\n                                    {/*<p className=\"social-text\">MICROSOFT</p>*/}\n                                {/*</Button>*/}\n                            {/*</div>*/}\n                        {/*</form>*/}\n                        {/*<p className=\"widget-auth-info\">*/}\n                            {/*Already have the account? Login now!*/}\n                        {/*</p>*/}\n                        {/*<Link className=\"d-block text-center\" to=\"login\">Enter the account</Link>*/}\n                    {/*</Widget>*/}\n                </Container>\n                <footer className=\"auth-footer\">\n                    2020 &copy; Sing App - React Admin Dashboard Template.\n                </footer>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        isFetching: state.register.isFetching,\n        errorMessage: state.register.errorMessage,\n    };\n}\n\nexport default withRouter(connect(mapStateToProps)(Register));\n\n"]},"metadata":{},"sourceType":"module"}