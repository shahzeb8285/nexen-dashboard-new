{"ast":null,"code":"import _defineProperty from \"/home/shandroid/Desktop/bird/client/RajBhai/dashboard2/light-blue-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/shandroid/Desktop/bird/client/RajBhai/dashboard2/light-blue-react-template/src/pages/dashboard/components/rickshaw/Rickshaw.js\";\nimport React from 'react';\nimport Rickshaw from 'rickshaw';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass RickshawGraph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graph: null\n    };\n    this.initRickshaw = this.initRickshaw.bind(this);\n    this.onResizeRickshaw = this.onResizeRickshaw.bind(this);\n  }\n\n  componentDidMount() {\n    this.initRickshaw();\n    window.addEventListener('resize', this.onResizeRickshaw);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.sidebarVisibility !== prevProps.sidebarVisibility) {\n      this.onResizeRickshaw();\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResizeRickshaw);\n  }\n\n  onResizeRickshaw() {\n    this.state.graph.configure({\n      height: this.props.height\n    });\n    this.state.graph.render();\n  }\n\n  initRickshaw() {\n    const seriesData = [[], []];\n    const random = new Rickshaw.Fixtures.RandomData(30);\n\n    for (let i = 0; i < 30; i += 1) {\n      random.addData(seriesData);\n    } // eslint-disable-next-line\n\n\n    this.state.graph = new Rickshaw.Graph({\n      element: this.rickshawChart,\n      height: this.props.height,\n      series: [{\n        color: '#1870DC',\n        data: seriesData[0],\n        name: 'Uploads'\n      }, {\n        color: '#58D777',\n        data: seriesData[1],\n        name: 'Downloads'\n      }]\n    });\n    const hoverDetail = new Rickshaw.Graph.HoverDetail({\n      graph: this.state.graph,\n      xFormatter: x => new Date(x * 1000).toString()\n    });\n    hoverDetail.show();\n    setInterval(() => {\n      random.removeData(seriesData);\n      random.addData(seriesData);\n      this.state.graph.update();\n    }, 1000);\n    this.state.graph.render();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: r => {\n        this.rickshawChart = r;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\n_defineProperty(RickshawGraph, \"propTypes\", {\n  height: PropTypes.number\n});\n\n_defineProperty(RickshawGraph, \"defaultProps\", {\n  height: 100\n});\n\nfunction mapStateToProps(store) {\n  return {\n    sidebarVisibility: store.navigation.sidebarVisibility\n  };\n}\n\nexport default connect(mapStateToProps)(RickshawGraph);","map":{"version":3,"sources":["/home/shandroid/Desktop/bird/client/RajBhai/dashboard2/light-blue-react-template/src/pages/dashboard/components/rickshaw/Rickshaw.js"],"names":["React","Rickshaw","PropTypes","connect","RickshawGraph","Component","constructor","props","state","graph","initRickshaw","bind","onResizeRickshaw","componentDidMount","window","addEventListener","componentDidUpdate","prevProps","sidebarVisibility","componentWillUnmount","removeEventListener","configure","height","render","seriesData","random","Fixtures","RandomData","i","addData","Graph","element","rickshawChart","series","color","data","name","hoverDetail","HoverDetail","xFormatter","x","Date","toString","show","setInterval","removeData","update","r","number","mapStateToProps","store","navigation"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Rickshaw from 'rickshaw';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass RickshawGraph extends React.Component {\n\n  static propTypes = {\n    height: PropTypes.number,\n  };\n\n  static defaultProps = {\n    height: 100,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      graph: null,\n    };\n    this.initRickshaw = this.initRickshaw.bind(this);\n    this.onResizeRickshaw = this.onResizeRickshaw.bind(this);\n  }\n\n  componentDidMount() {\n    this.initRickshaw();\n    window.addEventListener('resize', this.onResizeRickshaw);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.sidebarVisibility !== prevProps.sidebarVisibility) {\n      this.onResizeRickshaw()\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResizeRickshaw);\n  }\n\n  onResizeRickshaw() {\n    this.state.graph.configure({ height: this.props.height });\n    this.state.graph.render();\n  }\n\n  initRickshaw() {\n    const seriesData = [[], []];\n    const random = new Rickshaw.Fixtures.RandomData(30);\n    for (let i = 0; i < 30; i += 1) {\n      random.addData(seriesData);\n    }\n\n    // eslint-disable-next-line\n    this.state.graph = new Rickshaw.Graph({\n      element: this.rickshawChart,\n      height: this.props.height,\n      series: [\n        {\n          color: '#1870DC',\n          data: seriesData[0],\n          name: 'Uploads',\n        }, {\n          color: '#58D777',\n          data: seriesData[1],\n          name: 'Downloads',\n        },\n      ],\n    });\n\n    const hoverDetail = new Rickshaw.Graph.HoverDetail({\n      graph: this.state.graph,\n      xFormatter: x => new Date(x * 1000).toString(),\n    });\n\n    hoverDetail.show();\n\n    setInterval(() => {\n      random.removeData(seriesData);\n      random.addData(seriesData);\n      this.state.graph.update();\n    }, 1000);\n\n    this.state.graph.render();\n  }\n\n  render() {\n    return (\n      <div\n        ref={(r) => {\n          this.rickshawChart = r;\n        }}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return {\n    sidebarVisibility: store.navigation.sidebarVisibility,\n  };\n}\n\nexport default connect(mapStateToProps)(RickshawGraph);"]},"metadata":{},"sourceType":"module"}