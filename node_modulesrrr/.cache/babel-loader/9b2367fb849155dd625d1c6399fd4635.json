{"ast":null,"code":"import _objectWithoutProperties from \"/home/shandroid/Desktop/bird/client/RajBhai/dashboard2/light-blue-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/home/shandroid/Desktop/bird/client/RajBhai/dashboard2/light-blue-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/shandroid/Desktop/bird/client/RajBhai/dashboard2/light-blue-react-template/src/components/InfoTile/InfoTile.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport s from './InfoTile.module.scss';\nimport classNames from 'classnames';\nimport Loader from '../Loader'; // eslint-disable-line css-modules/no-unused-class\n\nimport AnimateHeight from 'react-animate-height';\nimport uuidv4 from 'uuid/v4';\nimport { DropdownToggle, DropdownMenu, DropdownItem, UncontrolledDropdown, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass InfoTile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      randomId: uuidv4(),\n      hideWidget: false,\n      collapseWidget: !!props.collapsed,\n      height: props.collapsed ? 0 : 'auto',\n      fullscreened: false,\n      reloading: false,\n      modal: false,\n      apiData: ''\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          title = _this$props.title,\n          className = _this$props.className,\n          children = _this$props.children,\n          close = _this$props.close,\n          fullscreen = _this$props.fullscreen,\n          collapse = _this$props.collapse,\n          refresh = _this$props.refresh,\n          settings = _this$props.settings,\n          settingsInverse = _this$props.settingsInverse,\n          tooltipPlacement = _this$props.tooltipPlacement,\n          showTooltip = _this$props.showTooltip,\n          bodyClass = _this$props.bodyClass,\n          options = _this$props.options,\n          attributes = _objectWithoutProperties(_this$props, [\"title\", \"className\", \"children\", \"close\", \"fullscreen\", \"collapse\", \"refresh\", \"settings\", \"settingsInverse\", \"tooltipPlacement\", \"showTooltip\", \"bodyClass\", \"options\"]);\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", Object.assign({\n      style: {\n        marginLeft: \"5px\"\n      }\n    }, attributes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }), title && (typeof title === 'string' ? /*#__PURE__*/React.createElement(\"h5\", {\n      className: s.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, title) : /*#__PURE__*/React.createElement(\"header\", {\n      className: s.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, title)), /*#__PURE__*/React.createElement(AnimateHeight, {\n      duration: 500,\n      height: height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(s.widgetBody, \" widget-body \").concat(bodyClass),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, reloading || fetchingData ? /*#__PURE__*/React.createElement(Loader, {\n      className: s.widgetLoader,\n      size: 40,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 43\n      }\n    }) : customBody ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron handle bg-default text-white mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, \"Draggable story!\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, \"Build\"), \" your own interfaces! Sit back and relax.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleFullscreen,\n      className: \"btn btn-danger btn-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, !fullscreened ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }, \"Fullscreen me! \\xA0\", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 27\n      }\n    })) : 'Go Back')))) : children))), prompt && /*#__PURE__*/React.createElement(Modal, {\n      isOpen: modal,\n      toggle: this.toggleModal,\n      id: \"news-close-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleModal,\n      id: \"news-close-modal-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, \"Sure?\"), /*#__PURE__*/React.createElement(ModalBody, {\n      className: \"bg-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    }, \"Do you really want to unrevertably remove this super news widget?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"default\",\n      onClick: this.toggleModal,\n      \"data-dismiss\": \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }, \"No\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.closeWithModal,\n      id: \"news-widget-remove\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, \"Yes, remove widget\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: fullscreened ? 'block' : 'none'\n      },\n      className: s.widgetBackground,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\n_defineProperty(InfoTile, \"propTypes\", {\n  title: PropTypes.node,\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  close: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  fullscreen: PropTypes.bool,\n  collapse: PropTypes.bool,\n  refresh: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  settings: PropTypes.bool,\n  settingsInverse: PropTypes.bool,\n  tooltipPlacement: PropTypes.string,\n  showTooltip: PropTypes.bool,\n  bodyClass: PropTypes.string,\n  customControls: PropTypes.bool,\n  options: PropTypes.object,\n  //eslint-disable-line,\n  fetchingData: PropTypes.bool\n});\n\n_defineProperty(InfoTile, \"defaultProps\", {\n  title: null,\n  className: '',\n  children: [],\n  close: false,\n  fullscreen: false,\n  collapse: false,\n  refresh: false,\n  settings: false,\n  settingsInverse: false,\n  tooltipPlacement: 'bottom',\n  showTooltip: false,\n  bodyClass: '',\n  customControls: false,\n  customClose: null,\n  customExpand: null,\n  customCollapse: null,\n  customFullscreen: null,\n  customReload: null,\n  customDropDown: null,\n  prompt: false,\n  collapsed: false,\n  options: {},\n  fetchingData: false,\n  widgetType: \"\"\n});\n\nexport default InfoTile;","map":{"version":3,"sources":["/home/shandroid/Desktop/bird/client/RajBhai/dashboard2/light-blue-react-template/src/components/InfoTile/InfoTile.js"],"names":["React","PropTypes","UncontrolledTooltip","s","classNames","Loader","AnimateHeight","uuidv4","DropdownToggle","DropdownMenu","DropdownItem","UncontrolledDropdown","Button","Modal","ModalHeader","ModalBody","ModalFooter","InfoTile","Component","constructor","props","state","randomId","hideWidget","collapseWidget","collapsed","height","fullscreened","reloading","modal","apiData","render","title","className","children","close","fullscreen","collapse","refresh","settings","settingsInverse","tooltipPlacement","showTooltip","bodyClass","options","attributes","marginLeft","widgetBody","fetchingData","widgetLoader","customBody","handleFullscreen","prompt","toggleModal","closeWithModal","display","widgetBackground","node","string","oneOfType","arrayOf","bool","customControls","object","customClose","customExpand","customCollapse","customFullscreen","customReload","customDropDown","widgetType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport s from './InfoTile.module.scss';\nimport classNames from 'classnames';\nimport Loader from '../Loader'; // eslint-disable-line css-modules/no-unused-class\nimport AnimateHeight from 'react-animate-height';\nimport uuidv4 from 'uuid/v4'\nimport {\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap';\n\nclass InfoTile extends React.Component {\n  static propTypes = {\n    title: PropTypes.node,\n    className: PropTypes.string,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n    ]),\n    close: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    fullscreen: PropTypes.bool,\n    collapse: PropTypes.bool,\n    refresh: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    settings: PropTypes.bool,\n    settingsInverse: PropTypes.bool,\n    tooltipPlacement: PropTypes.string,\n    showTooltip: PropTypes.bool,\n    bodyClass: PropTypes.string,\n    customControls: PropTypes.bool,\n    options: PropTypes.object, //eslint-disable-line,\n    fetchingData: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    title: null,\n    className: '',\n    children: [],\n    close: false,\n    fullscreen: false,\n    collapse: false,\n    refresh: false,\n    settings: false,\n    settingsInverse: false,\n    tooltipPlacement: 'bottom',\n    showTooltip: false,\n    bodyClass: '',\n    customControls: false,\n    customClose: null,\n    customExpand: null,\n    customCollapse: null,\n    customFullscreen: null,\n    customReload: null,\n    customDropDown: null,\n    prompt: false,\n    collapsed: false,\n    options: {},\n    fetchingData: false,\n    widgetType: \"\",\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      randomId: uuidv4(),\n      hideWidget: false,\n      collapseWidget: !!props.collapsed,\n      height:  props.collapsed ? 0 : 'auto',\n      fullscreened: false,\n      reloading: false,\n      modal: false,\n      apiData: ''\n    }\n\n  }\n\n\n\n\n\n  render() {\n\n    const {\n      title,\n      className,\n      children,\n      close,\n      fullscreen,\n      collapse,\n      refresh,\n      settings,\n      settingsInverse,\n      tooltipPlacement,\n      showTooltip,\n      bodyClass,\n    \n     \n      options, //eslint-disable-line\n      ...attributes\n    } = this.props;\n\n\n\n\n\n    return (\n    <React.Fragment>\n      <section\n        style={{marginLeft:\"5px\"}}\n         {...attributes}\n        >\n        {\n          title && (\n            typeof title === 'string'\n              ? <h5 className={s.title}>{title}</h5>\n              : <header className={s.title}>{title}</header>\n          )\n        }\n\n        \n        <AnimateHeight\n          duration={ 500 }\n          height={ height }\n        >\n\n          <div className={`${s.widgetBody} widget-body ${bodyClass}`}>\n            {reloading || fetchingData ?  <Loader className={s.widgetLoader} size={40}/> : customBody ? (\n                <div className=\"jumbotron handle bg-default text-white mb-0\">\n                <div className=\"container\">\n                  <h1>Draggable story!</h1>\n                  <p className=\"lead\">\n                    <em>Build</em> your own\n                    interfaces! Sit back and relax.\n                  </p>\n                  <p className=\"text-center\">\n                    <button onClick={this.handleFullscreen} className=\"btn btn-danger btn-lg\">\n                      {!fullscreened ?\n                        <React.Fragment>Fullscreen me! &nbsp;\n                          <i className=\"fa fa-check\" />\n                        </React.Fragment>\n                        : 'Go Back'\n                      }\n                    </button>\n                  </p>\n                </div>\n              </div>\n            ) : children}\n          </div>\n\n       </AnimateHeight>\n\n      </section>\n      {prompt && (\n        <Modal isOpen={modal} toggle={this.toggleModal} id=\"news-close-modal\">\n        <ModalHeader toggle={this.toggleModal} id=\"news-close-modal-label\">Sure?</ModalHeader>\n        <ModalBody className=\"bg-white\">\n          Do you really want to unrevertably remove this super news widget?\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"default\" onClick={this.toggleModal} data-dismiss=\"modal\">No</Button>{' '}\n          <Button color=\"danger\" onClick={this.closeWithModal} id=\"news-widget-remove\">Yes,\n            remove widget</Button>\n        </ModalFooter>\n      </Modal>\n      )}\n      <div style={{display: fullscreened ? 'block'  : 'none'}} className={s.widgetBackground}></div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default InfoTile;\n"]},"metadata":{},"sourceType":"module"}