{"ast":null,"code":"var _jsxFileName = \"/home/shandroid/Desktop/bird/client/RajBhai/dashboard2/light-blue-react-template/src/pages/dashboard/components/am4chartMap/am4chartMap.js\";\nimport React, { Component } from 'react';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport cities from './mock';\nimport am4geodata_usaHigh from \"@amcharts/amcharts4-geodata/usaHigh\";\nimport AnimateNumber from 'react-animated-number';\nimport s from './am4chartMap.module.scss';\n\nclass Am4chartMap extends Component {\n  componentDidMount() {\n    let map = am4core.create(\"map\", am4maps.MapChart);\n    map.geodata = am4geodata_usaHigh;\n    map.percentHeight = 90;\n    map.dy = 10;\n    map.projection = new am4maps.projections.AlbersUsa();\n    let polygonSeries = map.series.push(new am4maps.MapPolygonSeries());\n    polygonSeries.useGeodata = true;\n    map.homeZoomLevel = 1.2;\n    map.zoomControl = new am4maps.ZoomControl();\n    map.zoomControl.layout = 'horizontal';\n    map.zoomControl.align = 'left';\n    map.zoomControl.valign = 'bottom';\n    map.zoomControl.dy = -10;\n    map.zoomControl.contentHeight = 20;\n    map.zoomControl.minusButton.background.fill = am4core.color(\"#C7D0FF\");\n    map.zoomControl.minusButton.background.stroke = am4core.color(\"#6979C9\");\n    map.zoomControl.minusButton.label.fontWeight = 600;\n    map.zoomControl.minusButton.label.fontSize = 22;\n    map.zoomControl.minusButton.scale = .75;\n    map.zoomControl.minusButton.label.scale = .75;\n    map.zoomControl.plusButton.background.fill = am4core.color(\"#C7D0FF\");\n    map.zoomControl.plusButton.background.stroke = am4core.color(\"#6979C9\");\n    map.zoomControl.plusButton.label.fontWeight = 600;\n    map.zoomControl.plusButton.label.fontSize = 22;\n    map.zoomControl.plusButton.label.align = \"center\";\n    map.zoomControl.plusButton.scale = .75;\n    map.zoomControl.plusButton.label.scale = .75;\n    map.zoomControl.plusButton.dx = 5;\n    let plusButtonHoverState = map.zoomControl.plusButton.background.states.create(\"hover\");\n    plusButtonHoverState.properties.fill = am4core.color(\"#354D84\");\n    let minusButtonHoverState = map.zoomControl.minusButton.background.states.create(\"hover\");\n    minusButtonHoverState.properties.fill = am4core.color(\"#354D84\");\n    let polygonTemplate = polygonSeries.mapPolygons.template;\n    polygonTemplate.tooltipText = \"{name}\";\n    polygonTemplate.fill = am4core.color(\"#474D84\");\n    polygonTemplate.stroke = am4core.color(\"#6979C9\");\n    let hs = polygonTemplate.states.create(\"hover\");\n    hs.properties.fill = am4core.color(\"#354D84\");\n    let citySeries = map.series.push(new am4maps.MapImageSeries());\n    citySeries.data = cities;\n    citySeries.dataFields.value = \"size\";\n    let city = citySeries.mapImages.template;\n    city.nonScaling = true;\n    city.propertyFields.latitude = \"latitude\";\n    city.propertyFields.longitude = \"longitude\";\n    let circle = city.createChild(am4core.Circle);\n    circle.fill = am4core.color(\"#C7D0FF\");\n    circle.strokeWidth = 0;\n    let circleHoverState = circle.states.create(\"hover\");\n    circleHoverState.properties.strokeWidth = 1;\n    circle.tooltipText = '{tooltip}';\n    circle.propertyFields.radius = 'size';\n    this.map = map;\n  }\n\n  componentWillUnmount() {\n    if (this.map) {\n      this.map.dispose();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: s.mapChart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: s.stats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"GEO-LOCATIONS\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"h3 m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"mr-xs fw-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AnimateNumber, {\n      value: 1656843,\n      initialValue: 0,\n      duration: 1000,\n      stepPrecision: 0,\n      formatValue: n => n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-map-marker\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: s.map,\n      id: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"Alternative content for the map\")));\n  }\n\n}\n\nexport default Am4chartMap;","map":{"version":3,"sources":["/home/shandroid/Desktop/bird/client/RajBhai/dashboard2/light-blue-react-template/src/pages/dashboard/components/am4chartMap/am4chartMap.js"],"names":["React","Component","am4core","am4maps","cities","am4geodata_usaHigh","AnimateNumber","s","Am4chartMap","componentDidMount","map","create","MapChart","geodata","percentHeight","dy","projection","projections","AlbersUsa","polygonSeries","series","push","MapPolygonSeries","useGeodata","homeZoomLevel","zoomControl","ZoomControl","layout","align","valign","contentHeight","minusButton","background","fill","color","stroke","label","fontWeight","fontSize","scale","plusButton","dx","plusButtonHoverState","states","properties","minusButtonHoverState","polygonTemplate","mapPolygons","template","tooltipText","hs","citySeries","MapImageSeries","data","dataFields","value","city","mapImages","nonScaling","propertyFields","latitude","longitude","circle","createChild","Circle","strokeWidth","circleHoverState","radius","componentWillUnmount","dispose","render","mapChart","stats","n","toString","replace"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport cities from './mock';\nimport am4geodata_usaHigh from \"@amcharts/amcharts4-geodata/usaHigh\";\n\nimport AnimateNumber from 'react-animated-number';\nimport s from './am4chartMap.module.scss';\n  \n  class Am4chartMap extends Component {\n  \n  componentDidMount() {\n    let map = am4core.create(\"map\", am4maps.MapChart);\n    map.geodata = am4geodata_usaHigh;\n    map.percentHeight = 90;\n    map.dy = 10;\n    map.projection = new am4maps.projections.AlbersUsa();\n    let polygonSeries = map.series.push(new am4maps.MapPolygonSeries());\n    polygonSeries.useGeodata = true;\n    map.homeZoomLevel = 1.2;\n    map.zoomControl = new am4maps.ZoomControl();\n    map.zoomControl.layout = 'horizontal';\n    map.zoomControl.align = 'left';\n    map.zoomControl.valign = 'bottom';\n    map.zoomControl.dy = -10;\n    map.zoomControl.contentHeight = 20;\n    map.zoomControl.minusButton.background.fill = am4core.color(\"#C7D0FF\");\n    map.zoomControl.minusButton.background.stroke = am4core.color(\"#6979C9\");\n    map.zoomControl.minusButton.label.fontWeight = 600;\n    map.zoomControl.minusButton.label.fontSize = 22;\n    map.zoomControl.minusButton.scale = .75;\n    map.zoomControl.minusButton.label.scale = .75;\n    map.zoomControl.plusButton.background.fill = am4core.color(\"#C7D0FF\");\n    map.zoomControl.plusButton.background.stroke = am4core.color(\"#6979C9\");\n    map.zoomControl.plusButton.label.fontWeight = 600;\n    map.zoomControl.plusButton.label.fontSize = 22;\n    map.zoomControl.plusButton.label.align = \"center\";\n    map.zoomControl.plusButton.scale = .75;\n    map.zoomControl.plusButton.label.scale = .75;\n    map.zoomControl.plusButton.dx = 5;\n    let plusButtonHoverState = map.zoomControl.plusButton.background.states.create(\"hover\");\n    plusButtonHoverState.properties.fill = am4core.color(\"#354D84\");\n    let minusButtonHoverState = map.zoomControl.minusButton.background.states.create(\"hover\");\n    minusButtonHoverState.properties.fill = am4core.color(\"#354D84\");\n    let polygonTemplate = polygonSeries.mapPolygons.template;\n    polygonTemplate.tooltipText = \"{name}\";\n    polygonTemplate.fill = am4core.color(\"#474D84\");\n    polygonTemplate.stroke = am4core.color(\"#6979C9\")\n    let hs = polygonTemplate.states.create(\"hover\");\n    hs.properties.fill = am4core.color(\"#354D84\");\n    let citySeries = map.series.push(new am4maps.MapImageSeries());\n    citySeries.data = cities;\n    citySeries.dataFields.value = \"size\";\n    let city = citySeries.mapImages.template;\n    city.nonScaling = true;\n    city.propertyFields.latitude = \"latitude\";\n    city.propertyFields.longitude = \"longitude\";\n    let circle = city.createChild(am4core.Circle);\n    circle.fill = am4core.color(\"#C7D0FF\");\n    circle.strokeWidth = 0;\n    let circleHoverState = circle.states.create(\"hover\");\n    circleHoverState.properties.strokeWidth = 1;\n    circle.tooltipText = '{tooltip}';\n    circle.propertyFields.radius = 'size';\n    this.map = map;\n  }\n\n  componentWillUnmount() {\n    if(this.map) {\n      this.map.dispose();\n    }\n  }\n\n  render() {\n    return (\n      <div className={s.mapChart}>\n        <div className={s.stats}>\n          <h6 className=\"mt-1\">GEO-LOCATIONS</h6>\n          <p className=\"h3 m-0\">\n            <span className=\"mr-xs fw-normal\">\n              <AnimateNumber\n                value={1656843}\n                initialValue={0}\n                duration={1000} \n                stepPrecision={0}\n                formatValue={n => n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")}\n              /></span>\n            <i className=\"fa fa-map-marker\" />\n          </p>\n        </div>\n        <div className={s.map} id=\"map\">\n          <span>Alternative content for the map</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Am4chartMap;\n"]},"metadata":{},"sourceType":"module"}